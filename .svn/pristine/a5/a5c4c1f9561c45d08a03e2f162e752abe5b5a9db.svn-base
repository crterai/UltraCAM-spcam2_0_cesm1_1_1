#ifdef CRMACCEL
subroutine accelerate_crm (accel_factor)

!----------------------------------------------------------
! author: Christopher Jones (cjones)
! email: crj6@uw.edu
! date: 5/21/2014
! ported to UPCAM: Mike Pritchard (pritch)
! date: 4/22/2015
!
! If do_accel = .true., accelerate the horizontal mean 
! tendency of t and qt=qcl+qci+qv by an additional factor 
! accel_factor.
!
! Specifically, if the horizontal mean tendency is "tend", 
! then the accelerated tendency for field phi will be 
! (dphi/dt) = tend + (accel_factor)*tend
!
! Note: Precipitation is NOT accelerated. The current version
!       also does not accelerate any tracers.
!----------------------------------------------------------
use shr_kind_mod, only: r8=>shr_kind_r8
use vars
use params
use microphysics, only: micro_field, index_water_vapor
implicit none

real, intent (in) :: accel_factor
integer i,j,k
real(r8) :: coef
real(r8) :: dq_accel,tbaccel(nzm),qtbaccel(nzm)
real(r8) :: ttend_acc(nzm), qtend_acc(nzm), neg_qacc(nzm)

coef = 1./float(nx*ny)

! NOTE: 
! neg_qacc(k) now equals horizontal mean 
! qt that was not removed from the system because acceleration
! tendency would have driven qt negative.

! calculate horizontal means
do k=1,nzm
  tbaccel(k)=0.    ! lse after physics (before applying accel)
  qtbaccel(k)=0.   ! qt after physics
  neg_qacc(k) = 0. ! excess qt that cannot be depleted
  do j=1,ny
    do i=1,nx
     tbaccel(k) = tbaccel(k)+t(i,j,k)
     qtbaccel(k) = qtbaccel(k) + qcl(i,j,k)+qci(i,j,k)+qv(i,j,k)
    end do
  end do
  tbaccel(k)=tbaccel(k)*coef
  qtbaccel(k)=qtbaccel(k)*coef
end do ! k

! apply acceleration tendency
do k=1,nzm
     ! pritch notes t0 and q0 are profiles of horizontal average field
        ! available in common.inc

           ! pritch asks  - what is dtn?
!              dtn = dt/ncycle (from crm.F)
!              dynamically adjusted timestep, modified based on
!              convergence issues

           ! pritch asks - what is t0 and when is it updated?
!               t0,q0 = mean domain profiles prior to CRM time
!               integration loop.

   ttend_acc(k) = accel_factor*(tbaccel(k)-t0(k))/dtn
   dq_accel = accel_factor*(qtbaccel(k) - q0(k))
   qtend_acc(k) = dq_accel/dtn
   do j=1,ny
      do i=1,nx
         t(i,j,k)   = t(i,j,k)  +accel_factor*(tbaccel(k)-t0(k))
         micro_field(i,j,k,index_water_vapor) = &
              micro_field(i,j,k,index_water_vapor)+dq_accel

         ! enforce positivity and accumulate (negative) excess
         if(micro_field(i,j,k,index_water_vapor) .lt. 0.) then
            neg_qacc(k)=neg_qacc(k)+micro_field(i,j,k,index_water_vapor)
            micro_field(i,j,k,index_water_vapor)=0.
         end if

         ! add qt tendency to qv
         qv(i,j,k) = max(0.,qv(i,j,k)+dq_accel)
      end do
   end do
   neg_qacc(k) = neg_qacc(k)*coef
end do

end subroutine accelerate_crm
#endif
